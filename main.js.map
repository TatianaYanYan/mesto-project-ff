{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["/**\n * Открываем модальное окно.\n */\nexport function openPopup(popupElement) {\n  // Добавляем класс, запускающий анимацию открытия\n  popupElement.classList.add('popup_is-opened');\n\n  // Если это первый открытый попап — добавляем обработчик Escape\n  if (!document._escapeHandler) {\n    document._escapeHandler = handleEscClose;\n    document.addEventListener('keydown', document._escapeHandler);\n  }\n}\n\n/**\n * Закрываем модальное окно.\n */\nexport function closePopup(popupElement) {\n  // Убираем класс popup_is-opened, чтобы запустить обратную анимацию\n  popupElement.classList.remove('popup_is-opened');\n\n  // Удаляем обработчик Escape, если это последний закрытый попап\n  if (document._escapeHandler && !getOpenedPopups().length) {\n    document.removeEventListener('keydown', document._escapeHandler);\n    delete document._escapeHandler;\n  }\n}\n\n// Вспомогательная функция для получения всех открытых попапов\nfunction getOpenedPopups() {\n  return document.querySelectorAll('.popup.popup_is-opened');\n}\n\n// Вспомогательная функция для закрытия попапа по клавише Escape\nfunction handleEscClose(evt) {\n  if (evt.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup.popup_is-opened');\n    if (openedPopup) closePopup(openedPopup);\n  }\n}\n","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-41',\n  headers: {\n    authorization: '1320da65-2a44-4da9-ac47-53e70b13e145',\n    'Content-Type': 'application/json'\n  }\n};\n\nfunction handleResponse(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}\n\nexport const getUserData = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'GET',\n    headers: config.headers\n  }).then(handleResponse);\n};\n\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'GET',\n    headers: config.headers\n  }).then(handleResponse);\n};\n\nexport const updateUserInfo = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({ name, about })\n  }).then(handleResponse);\n};\n\nexport const addNewCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({ name, link })\n  }).then(handleResponse);\n};\n\nexport const deleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(handleResponse);\n};\n\nexport const likeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'PUT',\n    headers: config.headers\n  }).then(handleResponse);\n};\n\nexport const unlikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(handleResponse);\n};\n\nexport const updateAvatar = (avatarLink) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({ avatar: avatarLink })\n  }).then(handleResponse);\n};","import { likeCard, unlikeCard, deleteCard } from './api.js';\n\nconst cardTemplate = document.querySelector('#card-template').content;\n\nexport function createCard(cardData, userId, handleDelete, handleClickImage, handleLike) {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCounter = cardElement.querySelector('.card__like-counter');\n\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n  likeCounter.textContent = cardData.likes?.length || 0;\n\n  if (cardData.likes.some(like => like._id === userId)) {\n    likeButton.classList.add('card__like-button_is-active');\n  }\n\n  if (cardData.owner._id !== userId) {\n    deleteButton.remove();\n  } else {\n    deleteButton.addEventListener('click', () => handleDelete(cardData, cardElement));\n  }\n\n  cardImage.addEventListener('click', () => handleClickImage(cardData.link, cardData.name));\n  likeButton.addEventListener('click', () => handleLike(cardData, userId, likeButton, likeCounter));\n\n  return cardElement;\n}\n\nexport function handleDeleteCard(cardData, cardElement) {\n  deleteCard(cardData._id)\n    .then(() => {\n      cardElement.remove();\n    })\n    .catch(err => console.error('Не удалось удалить карточку:', err));\n}\n\nexport function handleLikeCard(cardData, userId, likeButton, likeCounter) {\n  const isLiked = likeButton.classList.contains('card__like-button_is-active');\n  const apiCall = isLiked ? unlikeCard(cardData._id) : likeCard(cardData._id);\n\n  apiCall\n    .then(updatedCardData => {\n      likeButton.classList.toggle('card__like-button_is-active', !isLiked);\n      likeCounter.textContent = updatedCardData.likes.length;\n    })\n    .catch(err => console.error('Не удалось обновить лайк:', err));\n}","// Функция для проверки регулярного выражения\nfunction isValidPattern(input, pattern, errorMessage) {\n  const regex = new RegExp(pattern);\n  return regex.test(input.trim()) ? null : errorMessage;\n}\n\n// Кастомные сообщения об ошибках\nconst customErrorMessages = {\n  required: \"Вы пропустили это поле\",\n  minLength: (minLength, currentLength) => \n    `Минимальное количество символов ${minLength}. Длина текста сейчас: ${currentLength} символ${currentLength !== 1 ? 'а' : ''}`,\n  invalidCharacters: \"Разрешены только латинские, кириллические буквы, знаки дефиса и пробелы\",\n  invalidUrl: \"Введите адрес сайта\"\n};\n\n// Функция для получения сообщения об ошибке\nfunction getErrorMessage(inputElement) {\n  if (inputElement.validity.valueMissing) {\n    return inputElement.dataset.requiredMessage || customErrorMessages.required;\n  }\n\n  if (inputElement.validity.tooShort) {\n    return customErrorMessages.minLength(inputElement.minLength, inputElement.value.length);\n  }\n\n  if (inputElement.type === 'url' && !isValidPattern(inputElement.value, /^https?:\\/\\/[^\\s]+$/i, customErrorMessages.invalidUrl)) {\n    return customErrorMessages.invalidUrl;\n  }\n\n  if (inputElement.dataset.error) {\n    const pattern = inputElement.pattern ? new RegExp(inputElement.pattern) : null;\n    if (pattern && !pattern.test(inputElement.value.trim())) {\n      return inputElement.dataset.error;\n    }\n  }\n\n  return \"\";\n}\n\n// Функция для проверки ввода\nfunction checkInputValidity(formElement, inputElement) {\n  const errorElement = formElement.querySelector(`#${inputElement.id}-error`);\n  const errorMessage = getErrorMessage(inputElement);\n\n  if (errorMessage) {\n    inputElement.classList.add('popup__input_type_error');\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add('popup__error_visible');\n  } else {\n    inputElement.classList.remove('popup__input_type_error');\n    errorElement.textContent = '';\n    errorElement.classList.remove('popup__error_visible');\n  }\n}\n\n// Функция для переключения состояния кнопки submit\nfunction toggleButtonState(formElement) {\n  const isInvalid = Array.from(formElement.querySelectorAll('.popup__input')).some(\n    inputElement => !inputElement.checkValidity()\n  );\n\n  const submitButton = formElement.querySelector('.popup__button');\n  if (isInvalid) {\n    submitButton.classList.add('popup__button_disabled');\n    submitButton.disabled = true;\n  } else {\n    submitButton.classList.remove('popup__button_disabled');\n    submitButton.disabled = false;\n  }\n}\n\n// Функция для установки слушателей событий на все формы\nfunction setEventListeners(formElement) {\n  const inputList = formElement.querySelectorAll('.popup__input');\n\n  // Устанавливаем паттерны для валидации\n  const patterns = {\n    'popup__input_type_name': /^[a-zA-Zа-яА-ЯёЁ\\- ]+$/,\n    'popup__input_type_description': /^[a-zA-Zа-яА-ЯёЁ\\- ]+$/,\n    'popup__input_type_card-name': /^[a-zA-Zа-яА-ЯёЁ\\- ]+$/,\n    'popup__input_type_url': /^https?:\\/\\/[^\\s]+$/i,\n    'popup__input_type_avatar-url': /^https?:\\/\\/[^\\s]+$/i\n  };\n\n  inputList.forEach(inputElement => {\n    // Добавляем data-атрибут с сообщением об ошибке для кастомных правил\n    const inputClass = [...inputElement.classList].find(cls => cls.startsWith('popup__input_type_'));\n    if (patterns[inputClass]) {\n      inputElement.pattern = patterns[inputClass].source;\n      if (inputClass.includes('name') || inputClass.includes('description')) {\n        inputElement.dataset.error = customErrorMessages.invalidCharacters;\n        inputElement.setAttribute('minlength', 2);\n        inputElement.setAttribute('maxlength', inputClass.includes('name') ? 40 : 200);\n      }\n      if (inputClass.includes('url') || inputClass.includes('avatar-url')) {\n        inputElement.type = 'url';\n        inputElement.dataset.requiredMessage = customErrorMessages.invalidUrl;\n      }\n    }\n\n    inputElement.addEventListener('input', () => {\n      // Проверяем дополнительные условия валидации\n      const inputClass = [...inputElement.classList].find(cls => cls.startsWith('popup__input_type_'));\n      if (patterns[inputClass]) {\n        const result = isValidPattern(inputElement.value, patterns[inputClass], inputElement.dataset.error || customErrorMessages.invalidUrl);\n        inputElement.setCustomValidity(result || '');\n      }\n\n      checkInputValidity(formElement, inputElement);\n      toggleButtonState(formElement);\n    });\n  });\n\n  // Блокируем отправку формы, если есть ошибки\n  formElement.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n    const firstInvalidInput = [...inputList].find(input => !input.checkValidity());\n    if (firstInvalidInput) {\n      firstInvalidInput.focus();\n    }\n  });\n}\n\n// Функция для очистки валидации\nexport function clearValidation(formElement, config) {\n  const inputList = formElement.querySelectorAll(config.inputSelector);\n  const submitButton = formElement.querySelector(config.submitButtonSelector);\n\n  inputList.forEach(inputElement => {\n    const errorElement = formElement.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(config.inputErrorClass);\n    errorElement.textContent = \"\";\n    errorElement.classList.remove(config.errorClass);\n    inputElement.setCustomValidity('');\n  });\n\n  submitButton.classList.add(config.inactiveButtonClass);\n  submitButton.disabled = true;\n}\n\n// Основная функция включения валидации\nexport function enableValidation(config) {\n  const formList = document.querySelectorAll(config.formSelector);\n\n  formList.forEach(formElement => {\n    setEventListeners(formElement);\n    toggleButtonState(formElement);\n  });\n}","import './pages/index.css';\nimport {\n  openPopup,\n  closePopup\n} from './components/modal.js';\nimport {\n  createCard,\n  handleDeleteCard,\n  handleLikeCard\n} from './components/card.js';\nimport {\n  getUserData,\n  getInitialCards,\n  updateUserInfo,\n  addNewCard,\n  deleteCard,\n  likeCard,\n  unlikeCard,\n  updateAvatar\n} from './components/api.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\n\n// Конфигурация валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\n// Включение валидации для всех форм\nenableValidation(validationConfig);\n\n// DOM элементы\nconst placesList = document.querySelector('.places__list');\nconst popupEdit = document.querySelector('.popup.popup_type_edit');\nconst editForm = popupEdit.querySelector('.popup__form[name=\"edit-profile\"]');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst avatarElement = document.querySelector('.profile__image');\nconst popupNewCard = document.querySelector('.popup.popup_type_new-card');\nconst newCardForm = popupNewCard.querySelector('.popup__form[name=\"new-place\"]');\nconst popupUpdateAvatar = document.querySelector('.popup.popup_type_update-avatar');\nconst updateAvatarForm = popupUpdateAvatar.querySelector('.popup__form[name=\"update-avatar\"]');\n\n// Редактирование профиля\nexport function handleProfileFormSubmit(profileTitle, profileDescription, popupEdit, closePopup) {\n  return function (evt) {\n    evt.preventDefault();\n    \n    // Очистка ошибок валидации перед отправкой формы\n    clearValidation(editForm, validationConfig);\n    \n    const nameInput = evt.target.querySelector('.popup__input_type_name');\n    const jobInput = evt.target.querySelector('.popup__input_type_description');\n    const newName = nameInput.value;\n    const newAbout = jobInput.value;\n    const submitButton = evt.target.querySelector('.popup__button');\n    const originalText = submitButton.textContent;\n    submitButton.textContent = 'Сохранение...';\n    \n    updateUserInfo(newName, newAbout)\n      .then(userData => {\n        profileTitle.textContent = userData.name;\n        profileDescription.textContent = userData.about;\n        closePopup(popupEdit);\n      })\n      .catch(err => console.error('Не удалось сохранить данные:', err))\n      .finally(() => {\n        submitButton.textContent = originalText;\n      });\n  };\n}\n\n// Добавление новой карточки\nexport function handleAddCardFormSubmit(\n  placesList,\n  newCardForm,\n  popupNewCard,\n  closePopup,\n  createCard,\n  handleDeleteCard,\n  handleCardImageClick,\n  handleLikeCard\n) {\n  return function (evt) {\n    evt.preventDefault();\n    \n    // Очистка ошибок валидации перед отправкой формы\n    clearValidation(newCardForm, validationConfig);\n    \n    const nameInput = newCardForm.querySelector('.popup__input_type_card-name');\n    const linkInput = newCardForm.querySelector('.popup__input_type_url');\n    const newCardData = { name: nameInput.value, link: linkInput.value };\n    const submitButton = evt.target.querySelector('.popup__button');\n    const originalText = submitButton.textContent;\n    submitButton.textContent = 'Сохранение...';\n    \n    addNewCard(newCardData.name, newCardData.link)\n      .then(cardData => {\n        const newCardElement = createCard(\n          cardData,\n          window.userId,\n          handleDeleteCard,\n          handleCardImageClick,\n          handleLikeCard\n        );\n        placesList.prepend(newCardElement);\n        newCardForm.reset();\n        \n        // После сброса формы, вызываем clearValidation, чтобы кнопка оставалась неактивной\n        clearValidation(newCardForm, validationConfig);\n        \n        closePopup(popupNewCard);\n      })\n      .catch(err => console.error('Не удалось добавить карточку:', err))\n      .finally(() => {\n        submitButton.textContent = originalText;\n      });\n  };\n}\n\n/**\n * Обработчик клика по изображению карточки: открывает попап с изображением.\n */\nexport function handleCardImageClick(link, name) {\n  const popupImage = document.querySelector('.popup.popup_type_image');\n  const popupImageImg = popupImage.querySelector('.popup__image');\n  const popupImageCaption = popupImage.querySelector('.popup__caption');\n  popupImageImg.src = link;\n  popupImageImg.alt = name;\n  popupImageCaption.textContent = name;\n  openPopup(popupImage);\n}\n\nexport function setModalListeners() {\n  const popupEdit = document.querySelector('.popup.popup_type_edit');\n  const editButton = document.querySelector('.profile__edit-button');\n  const popupNewCard = document.querySelector('.popup.popup_type_new-card');\n  const addButton = document.querySelector('.profile__add-button');\n  \n  // Открытие попапа редактирования профиля\n  editButton.addEventListener('click', () => {\n    const nameInput = popupEdit.querySelector('.popup__input_type_name');\n    const jobInput = popupEdit.querySelector('.popup__input_type_description');\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    \n    // Очистка ошибок валидации при открытии формы\n    clearValidation(editForm, validationConfig);\n    \n    openPopup(popupEdit);\n  });\n  \n  // Открытие попапа добавления новой карточки\n  addButton.addEventListener('click', () => {\n    openPopup(popupNewCard);\n    \n    // Очистка формы при открытии\n    newCardForm.reset();\n    // Очистка ошибок валидации при открытии формы\n    clearValidation(newCardForm, validationConfig);\n  });\n  \n  // Открытие попапа обновления аватара\n  avatarElement.addEventListener('click', () => {\n    openPopup(popupUpdateAvatar);\n  });\n  \n  // Закрытие по крестику и оверлею\n  document.querySelectorAll('.popup__close').forEach(button => {\n    button.addEventListener('click', (evt) => {\n      const popup = evt.target.closest('.popup');\n      if (popup) closePopup(popup);\n    });\n  });\n  document.querySelectorAll('.popup_is-animated').forEach(popup => {\n    popup.addEventListener('click', (evt) => {\n      if (evt.target === evt.currentTarget) {\n        closePopup(evt.currentTarget);\n      }\n    });\n  });\n}\n\n// Обработчик формы \"Обновить аватар\"\nexport function handleUpdateAvatarSubmit(avatarElement, formElement, popup, closePopup) {\n  return function (evt) {\n    evt.preventDefault();\n    \n    // Очистка ошибок валидации перед отправкой формы\n    clearValidation(updateAvatarForm, validationConfig);\n    \n    const input = formElement.querySelector('.popup__input_type_avatar-url');\n    const newAvatarLink = input.value;\n    const submitButton = formElement.querySelector('.popup__button');\n    const originalText = submitButton.textContent;\n    submitButton.textContent = 'Сохранение...';\n    \n    updateAvatar(newAvatarLink)\n      .then(userData => {\n        avatarElement.style.backgroundImage = `url(${userData.avatar})`;\n        closePopup(popup);\n        formElement.reset();\n        \n        // После сброса формы, вызываем clearValidation, чтобы кнопка оставалась неактивной\n        clearValidation(updateAvatarForm, validationConfig);\n        \n      })\n      .catch(err => console.error('Не удалось обновить аватар:', err))\n      .finally(() => {\n        submitButton.textContent = originalText;\n      });\n  };\n}\n\n// Назначаем обработчики событий\neditForm.addEventListener('submit', handleProfileFormSubmit(\n  profileTitle,\n  profileDescription,\n  popupEdit,\n  closePopup\n));\nnewCardForm.addEventListener('submit', handleAddCardFormSubmit(\n  placesList,\n  newCardForm,\n  popupNewCard,\n  closePopup,\n  createCard,\n  handleDeleteCard,\n  handleCardImageClick,\n  handleLikeCard\n));\nupdateAvatarForm.addEventListener('submit', handleUpdateAvatarSubmit(\n  avatarElement,\n  updateAvatarForm,\n  popupUpdateAvatar,\n  closePopup\n));\n\n// Инициализация модальных окон\nsetModalListeners();\n\n// Загрузка данных пользователя и карточек параллельно\nPromise.all([getUserData(), getInitialCards()])\n  .then(([userData, cardsData]) => {\n    window.userId = userData._id;\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    avatarElement.style.backgroundImage = `url(${userData.avatar})`;\n    cardsData.forEach(cardData => {\n      const cardElement = createCard(\n        cardData,\n        userData._id,\n        handleDeleteCard,\n        handleCardImageClick,\n        handleLikeCard\n      );\n      placesList.appendChild(cardElement);\n    });\n  })\n  .catch(error => {\n    console.error('Произошла ошибка:', error);\n  });"],"names":["openPopup","popupElement","classList","add","document","_escapeHandler","handleEscClose","addEventListener","closePopup","remove","querySelectorAll","length","removeEventListener","evt","key","openedPopup","querySelector","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","content","createCard","cardData","userId","handleDelete","handleClickImage","handleLike","_cardData$likes","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likeCounter","src","link","alt","name","textContent","likes","some","like","_id","owner","handleDeleteCard","cardId","fetch","method","then","catch","err","console","error","handleLikeCard","isLiked","contains","likeCard","updatedCardData","toggle","isValidPattern","input","pattern","errorMessage","RegExp","test","trim","customErrorMessages","toggleButtonState","formElement","isInvalid","Array","from","inputElement","checkValidity","submitButton","disabled","clearValidation","inputList","inputSelector","submitButtonSelector","forEach","errorElement","id","inputErrorClass","errorClass","setCustomValidity","inactiveButtonClass","validationConfig","formSelector","patterns","inputClass","_toConsumableArray","find","cls","startsWith","source","includes","dataset","setAttribute","type","requiredMessage","result","value","validity","valueMissing","tooShort","minLength","currentLength","getErrorMessage","checkInputValidity","preventDefault","firstInvalidInput","focus","setEventListeners","enableValidation","placesList","popupEdit","editForm","profileTitle","profileDescription","avatarElement","popupNewCard","newCardForm","popupUpdateAvatar","updateAvatarForm","handleCardImageClick","popupImage","popupImageImg","popupImageCaption","about","nameInput","target","jobInput","newName","newAbout","originalText","body","JSON","stringify","userData","finally","handleProfileFormSubmit","linkInput","newCardData","newCardElement","window","prepend","reset","handleAddCardFormSubmit","popup","avatarLink","newAvatarLink","avatar","style","backgroundImage","handleUpdateAvatarSubmit","editButton","addButton","button","closest","currentTarget","setModalListeners","all","_ref","_ref2","cardsData","appendChild"],"sourceRoot":""}